/*
 * jsFace JavaScript Object Oriented Programming Library
 *
 * https://github.com/tannhu/jsface
 *
 * Copyright (c) 2010 Tan Nhu
 * Dual licensed under the MIT and GPL version 2 licenses.
 * $Date: Saturday, March 07 2009 $
 */
var jsface=function(l){var o={version:"1.2",namespace:function(a){if(jsface.isString(a)){var a=a.split("."),b=a.length,c,e=l[a[0]]?l[a[0]]:l[a[0]]={};for(c=0;c<b;c++)if(!jsface.isIdentifier(a[c]))throw a[c]+" is not a valid namespace alias";for(c=1;c<b;c++)e[a[c]]=e[a[c]]?e[a[c]]:{},e=e[a[c]];return e}return null},each:function(){var a=arguments.length,b,c,e,d,f,g,i;switch(a){case 2:b=arguments[0];e=arguments[1];break;case 3:b=arguments[0];c=arguments[1];e=arguments[2];break;default:return}f=jsface.isArray(b)||
jsface.isString(b);g=jsface.isMap(b);i=jsface.isFunction(b);if(f||g||i)if(a===2)if(f){a=b.length;for(d=0;d<a;d++)if(f=e(b[d],d),f===!0)break}else for(d in b){if(f=e(d,b[d]),f===!0)break}else if(f){a=b.length;for(d=0;d<a;d++)if(c(b[d],d)&&(f=e(b[d],d),f===!0))break}else for(d in b)if(c(d,b[d])&&(f=e(d,b[d]),f===!0))break},merge:function(){var a=[].concat(Array.prototype.slice.apply(arguments)),b=null,c;switch(a.length){case 0:case 1:break;case 2:c=a[0]||{};a=a[1]||{};jsface.isMap(c)&&jsface.isMap(a)&&
(b={},jsface.each(c,function(a,d){b[a]=d}),jsface.each(a,function(a,d){b[a]=d}));break;default:c=a.shift(),b=jsface.merge(c,jsface.merge.apply(jsface,a))}return b},global:function(a,b){if(jsface.isIdentifier(a))return l[a]=b;else if(jsface.isMap(a))jsface.each(a,function(a,b){jsface.global(a,b)});else throw"jsface.global: Invalid global name "+a;},bindProperties:function(a,b){a&&jsface.isMap(b)&&jsface.each(b,function(b,e){a[b]=e})},isMap:function(a){return a&&typeof a==="object"&&!(typeof a.length===
"number"&&!a.propertyIsEnumerable("length"))},isArray:function(a){return a&&typeof a==="object"&&typeof a.length==="number"&&!a.propertyIsEnumerable("length")},isFunction:function(a){return a&&typeof a==="function"},isString:function(a){return Object.prototype.toString.apply(a)==="[object String]"},isBoolean:function(a){return Object.prototype.toString.apply(a)==="[object Boolean]"},isNumber:function(a){return Object.prototype.toString.apply(a)==="[object Number]"},isUndefined:function(a){return a===
void 0},isNull:function(a){return a===null},isNullOrUndefined:function(a){return a===void 0||a===null},isEmpty:function(a){return a===void 0||a===null||jsface.isString(a)&&jsface.trim(a)===""||jsface.isArray(a)&&a.length===0||jsface.isMap(a)&&function(a){for(var c in a)return!1;return!0}(a)},isClass:function(a){return jsface.isFunction(a)&&a===a.prototype.constructor},isIdentifier:function(a){return/^[a-zA-Z_$]+[0-9a-zA-Z_$]*$/.test(a)},noop:function(){},trim:function(a){for(var b={},c=22;c--;)b[" \n\r\t\u000b\u000c\u00a0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000".charAt(c)]=
!0;jsface.trim=function(a){if(!jsface.isString(a))return a;if(String.prototype.trim)return String.prototype.trim.apply(a);for(var d=-1,c=a.length;b[a.charAt(--c)];);for(;d++!==c&&b[a.charAt(d)];);return a.substring(d,c+1)};return jsface.trim(a)},capitalize:function(a){return jsface.isString(a)?a.charAt(0).toUpperCase()+a.slice(1).toLowerCase():a},fromString:function(a){for(var a=a.split("."),b=l,c=0,e=a.length-1;c<=e;){b=b[a[c]];if(!b)break;c++}return b},overload:function(){function a(a,b){if(b.length===
0)return b;for(var d in b)if(!jsface.isFunction(b[d]))return b;if(b.length===1)return b[0];return function(){var d=arguments.length,g=null,i;for(i in b)if(b[i].length===d)return b[i].apply(this,arguments);else b[i].length===0&&(g=b[i]);if(g)return g.apply(this,arguments);else throw"jsface.overload: "+a+"() does not accept "+d+" arguments";}}function b(a,b){function d(b,d){var f;try{return eval("(function() { return function(it) { return ("+b+") === true; }})();")}catch(e){throw"jsface.overload: Invalid validating expression: "+
b+" on overloading method "+a+"("+d+")";}}function f(b,f){var e=[];jsface.each(b,function(b){var b=jsface.trim(b),g,i,n,h,j=b.indexOf(":");j===-1?g=b:(g=b.substring(0,j),n=b.substring(j+1,b.length),h=d(n,f));try{i=eval(g)}catch(k){throw"jsface.overload: Type "+g+" is not defined on overloading method "+a+"("+f+")";}e.push({name:g,type:i,expression:n,evaluator:h})});return e}function g(a){if(jsface.isString(a))return String;if(jsface.isArray(a))return Array;if(jsface.isNumber(a))return Number;if(jsface.isFunction(a))return Function;
if(jsface.isBoolean(a))return Boolean;try{if(jsface.isString(a.classMeta.name))return eval(a.classMeta.name)}catch(b){}return Object}function i(b,d,f){var g=a+"(",e;for(e=0;e<f-1;e++)g+=b.types[e].name+": "+d[e]+", ";g+=b.types[f-1].name+": "+d[f-1]+")";return g}function h(b,d,f,e){var j=[],h;jsface.each(d,function(a){var b;a:{b=a.types;var d,c,i;for(d=0;d<f;d++)if(c=b[d].type,i=e[d],g(i)!==c&&!(i===null&&(c===String||c===Array||c===Object))){b=!1;break a}b=!0}b&&j.push(a)});j.length>1&&jsface.each(j,
function(a,d){for(h=0;h<f;h++){var c=a.types[h].evaluator;c&&c.call(b,e[h])===!1&&j.splice(d,1)}});if(j.length===1){d=j[0];for(h=0;h<f;h++){var k=d.types[h].evaluator;if(k&&k.call(b,e[h])!==!0)throw i(d,e,f)+". Validating error at parameter "+(h+1)+", expression: "+d.types[h].expression;}return d.fn.apply(b,e)}d=a+"(";for(h=0;h<f-1;h++)d+=e[h]+", ";d+=e[f-1]+"). Check argument types and values.";if(j.length===0)throw"No overloading method matches the call "+d;else throw"Vague arguments on calling "+
d;}var j={};jsface.isFunction(b["0"])&&(j["0"]=[{fn:b["0"]}]);for(var m in b){if(!jsface.isFunction(b[m]))return b;if(m!=="0"){var k=m.split(","),l=b[m];if(k.length===1&&!jsface.fromString(k[0].split(":")[0]))return b;if(k.length!==l.length)throw"jsface.def: Invalid method declaration for "+a+'() at overloading "'+m+'". Actual overloading parameters do not match with their types declaration.';j[k.length]===void 0&&(j[k.length]=[]);k=f(k,m);j[k.length].push({types:k,fn:l})}}return function(b){return function(){var d=
arguments.length;if(b[d]!==void 0)return h(this,b[d],d,arguments);else if(b[0]!==void 0)return b[0][0].fn.apply(this,arguments);else throw a+"() does not accept "+d+" arguments";}}(j)}return function(c,e){return jsface.isArray(e)?a(c,e):jsface.isMap(e)?b(c,e):e}}(),def:function(){function a(a){var c;if(!jsface.isMap(a))throw"jsface.def: Class parameters must be a map object";if(!jsface.isMap(a.$meta))throw"jsface.def: Invalid parameter $meta, must be a map";if(jsface.isString(a.$meta.name)){if(!jsface.isIdentifier(a.$meta.name))try{c=
a.$meta.name.split("."),a.$meta.name=c.pop(),a.$meta.namespace=jsface.namespace(c.join("."))}catch(e){throw"jsface.def: Class name "+a.$meta.name+" is not valid identifier";}}else throw"jsface.def: Class name is not valid string";}return function(){var b,c,e,d={$meta:1},f,g;switch(arguments.length){case 1:g=arguments[0];break;case 2:g=arguments[1];g.$meta=g.$meta||{};g.$meta.name=arguments[0];break;case 3:g=arguments[2],g.$meta=g.$meta||{},g.$meta.name=arguments[0],g.$meta.parent=arguments[1]}a(g);
jsface.each(jsface.def.plugins,function(a){d[a]=1});b=g.$meta;d[b.name]=1;b.singleton===!0?e=c={}:(c=g[b.name]?jsface.overload(b.name,g[b.name]):function(){},c.name=b.name,c.$meta=b,e=c.prototype);f=jsface.isArray(f)?b.parent:[b.parent];jsface.each(f,function(a){jsface.inherit(c,a)});jsface.each(g,function(a,c){if(!d[a]&&(e[a]=jsface.overload(b.name+"."+a,c),jsface.isFunction(e[a])))e[a].name=a});b.namespace?jsface.isString(b.namespace)?jsface.namespace(b.namespace)[b.name]=c:b.namespace[b.name]=
c:jsface.global(b.name,c);jsface.each(jsface.def.plugins,function(a,b){b(c,g)});return c}}(),wrap:function(a,b,c,e){function d(){if(e===!0){if(b.apply(this,arguments)!==!1){var d=a.apply(this,arguments);c.apply(this,arguments);return d}}else return c.apply(this,[a.apply(this,[b.apply(this,arguments)])])}var f={$meta:1,prototype:1};jsface.each(a,function(a,b){f[a]||(d[a]=b)});return d},pointcuts:function(a,b){if(jsface.isEmpty(a)||jsface.isEmpty(b))throw"jsface.pointcuts: Invalid parameters.";var c=
jsface.isFunction(a),e=!c,d=c?a.prototype:a;jsface.each(b,function(b,c){var i=c.seq===!1?!1:!0,h=c.before||jsface.noop,j=c.after||jsface.noop;if(!jsface.isFunction(h))throw"jsface.pointcuts: Invalid "+b+".before() pointcut. Must be a function";if(!jsface.isFunction(j))throw"jsface.pointcuts: Invalid "+b+".after() pointcut. Must be a function";if(e)if(jsface.isFunction(d[b]))d[b]=jsface.wrap(d[b],h,j,i);else throw"jsface.pointcuts: "+b+" is not a function, cannot be pointcut";else if(jsface.isMap(a.$meta)&&
jsface.isIdentifier(a.$meta.name)&&b===a.$meta.name){var m=a.prototype,k=a,i=jsface.wrap(a,h,j,i);a=a.$meta.namespace?a.$meta.namespace[b]=i:jsface.global(b,i);a.prototype=m;a.prototype.constructor=i;jsface.each(k,function(b,d){b!=="prototype"&&(a[b]=d)})}else if(jsface.isFunction(d[b]))d[b]=jsface.wrap(d[b],h,j,i),jsface.isFunction(a[b])&&(a[b]=d[b]);else throw"jsface.pointcuts: "+b+" is not a function, cannot be pointcut";})},inherit:function(a,b){var c={$meta:1,prototype:1},e;!jsface.isNullOrUndefined(a)&&
!jsface.isEmpty(b)&&(jsface.isArray(b)&&jsface.each(b,function(b){jsface.inherit(a,b)}),e=jsface.isClass(a)?a.prototype:a,jsface.each(b,function(a,f){c[a]||b.hasOwnProperty(a)&&!(jsface.isClass(b)&&a==="name")&&(e[a]=f)}),jsface.isClass(b)&&jsface.each(b.prototype,function(a,b){c[a]||(e[a]=b)}))},profiling:function(a,b){function c(a,b){return{before:function(){b[a]=b[a]||{};b[a].begin?b[a].begin.push(new Date):b[a].begin=[new Date]},after:function(){b[a].count=(b[a].count||0)+1;var c=b[a].begin.pop();
b[a].time=(b[a].time||0)+(new Date-c);b[a].begin.length||delete b[a].begin}}}function e(a,b){var e={},i=a,h;if(jsface.isClass(a)&&(i=a.prototype,a.$meta&&a.$meta.name))h=a.$meta.name,e[a.$meta.name]=c(h,b);jsface.each(i,function(a,d){jsface.isFunction(d)&&(e[a]=c(a,b))});return e}jsface.profiling=function(a,b){if(!jsface.isMap(b))throw"jsface.profile: profiling repository must be a map/object";jsface.pointcuts(a,e(a,b))};return jsface.profiling(a,b)}};o.def.plugins={statics:function(a,b){b.$meta.singleton||
jsface.each(b.$meta.statics,function(c){if(jsface.isIdentifier(c)&&b[c])a[c]=b[c];else throw"jsface.def: Invalid static method/property "+c+" in declaring class "+b.$meta.name;})},ready:function(a,b){jsface.isFunction(b.$meta.ready)&&(b.$meta.ready(a,b),delete b.$meta.ready)},pointcuts:function(a,b){jsface.isMap(b.$meta.pointcuts)&&jsface.pointcuts(a,b.$meta.pointcuts)}};return o}(this);